CMAKE_MINIMUM_REQUIRED (VERSION 3.14)

IF(POLICY CMP0135)
    CMAKE_POLICY(SET CMP0135 NEW)
ENDIF()

OPTION(EVP_TEST "Build tests." ON)

PROJECT (libevp C CXX)

GET_DIRECTORY_PROPERTY(PARENT_DIR PARENT_DIRECTORY)
IF(PARENT_DIR STREQUAL "")
    SET(EVP_TOP_LEVEL TRUE)
ELSE()
    SET(EVP_TOP_LEVEL FALSE)
ENDIF()

IF(EVP_TOP_LEVEL AND EVP_TEST)
    ENABLE_TESTING()
ENDIF()

SET(EVP_ROOT      "${PROJECT_SOURCE_DIR}")
SET(EVP_HEADERS   "${PROJECT_SOURCE_DIR}/include")
SET(EVP_LIBRARIES "${PROJECT_SOURCE_DIR}/libraries")

IF(EVP_TOP_LEVEL)
    IF(UNIX AND CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
        SET(CMAKE_CXX_STANDARD 20)

        SET(CMAKE_C_FLAGS           "-ldl -pthread -Wall -fpic")
        SET(CMAKE_C_FLAGS_DEBUG     "-O0")
        SET(CMAKE_C_FLAGS_RELEASE   "-O2")

        SET(CMAKE_CXX_FLAGS         "-ldl -pthread -Wall -fpic")
        SET(CMAKE_CXX_FLAGS_DEBUG   "-O0")
        SET(CMAKE_CXX_FLAGS_RELEASE "-O2")

        IF(LIBEVP_LINUX_ARCHITECTURE STREQUAL "x86")
            SET(CMAKE_C_FLAGS   "-m32 ${CMAKE_C_FLAGS}")
            SET(CMAKE_CXX_FLAGS "-m32 ${CMAKE_CXX_FLAGS}")
        ENDIF()
    ELSEIF(MSVC)
        SET(CMAKE_C_FLAGS           "/DWIN32 /D_WINDOWS /W3")
        SET(CMAKE_C_FLAGS_DEBUG     "/MTd /Od /Ob0 /RTC1 /Zi")
        SET(CMAKE_C_FLAGS_RELEASE   "/MT /O2 /Ob2 /DNDEBUG")

        SET(CMAKE_CXX_FLAGS         "/std:c++20 /DWIN32 /D_WINDOWS /W3 /EHsc /GR /GL-")
        SET(CMAKE_CXX_FLAGS_DEBUG   "/MTd /Od /Ob0 /RTC1 /Zi")
        SET(CMAKE_CXX_FLAGS_RELEASE "/MT /O2 /Ob2 /DNDEBUG")
    ENDIF()
ENDIF()

ADD_SUBDIRECTORY("dependencies")
ADD_SUBDIRECTORY("source")

IF(EVP_TOP_LEVEL AND EXISTS "${EVP_ROOT}/tools")
    ADD_SUBDIRECTORY("tools")
ENDIF()

IF(EVP_TOP_LEVEL AND EVP_TEST)
    ADD_SUBDIRECTORY("tests")
ENDIF()
