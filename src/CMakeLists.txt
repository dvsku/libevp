CMAKE_MINIMUM_REQUIRED (VERSION 3.8)

INCLUDE_DIRECTORIES("${CMAKE_SOURCE_DIR}/libevp")
LINK_DIRECTORIES("${CMAKE_SOURCE_DIR}/src/lib")

SET(BUILD_FILE_LIST "utilities/filtering.cpp" "libevp.cpp")

IF(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
	SET(CMAKE_CXX_STANDARD 20)
	SET(CMAKE_CXX_FLAGS			"-m32 -ldl -pthread -lstdc++fs -Wall -fpic")
	SET(CMAKE_CXX_FLAGS_DEBUG	"-O0")
	SET(CMAKE_CXX_FLAGS_RELEASE "-O2")

	ADD_LIBRARY(libevp SHARED ${BUILD_FILE_LIST})
	ADD_LIBRARY(libevp_static STATIC ${BUILD_FILE_LIST})

	IF		(CMAKE_BUILD_TYPE STREQUAL "Debug")
		SET_TARGET_PROPERTIES(libevp		PROPERTIES OUTPUT_NAME "libevp_d")
		SET_TARGET_PROPERTIES(libevp_static PROPERTIES OUTPUT_NAME "libevp_sd")

		TARGET_LINK_LIBRARIES(libevp "${CMAKE_SOURCE_DIR}/src/lib/libdvsku_crypt/libdvsku_crypt_d.a")
	ELSEIF	(CMAKE_BUILD_TYPE STREQUAL "Release")
		SET_TARGET_PROPERTIES(libevp		PROPERTIES OUTPUT_NAME "libevp")
		SET_TARGET_PROPERTIES(libevp_static PROPERTIES OUTPUT_NAME "libevp_s")

		TARGET_LINK_LIBRARIES(libevp "${CMAKE_SOURCE_DIR}/src/lib/libdvsku_crypt/libdvsku_crypt.a")
	ENDIF()

	SET_TARGET_PROPERTIES(libevp		PROPERTIES PREFIX "")
	SET_TARGET_PROPERTIES(libevp_static PROPERTIES PREFIX "")
	SET_TARGET_PROPERTIES(libevp		PROPERTIES LINKER_LANGUAGE CXX)
	SET_TARGET_PROPERTIES(libevp_static PROPERTIES LINKER_LANGUAGE CXX)
ELSEIF(CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
	SET(CMAKE_CXX_FLAGS			"/std:c++20 /DWIN32 /D_WINDOWS /W3 /EHsc /GR /GL-")
	SET(CMAKE_CXX_FLAGS_DEBUG	"/Od /Ob0 /RTC1 /Zi")
	SET(CMAKE_CXX_FLAGS_RELEASE "/O2 /Ob2 /DNDEBUG")

	ADD_LIBRARY(libevp_mt			SHARED ${BUILD_FILE_LIST})
	ADD_LIBRARY(libevp_md			SHARED ${BUILD_FILE_LIST})
	ADD_LIBRARY(libevp_static_mt	STATIC ${BUILD_FILE_LIST})
	ADD_LIBRARY(libevp_static_md	STATIC ${BUILD_FILE_LIST})

	TARGET_COMPILE_DEFINITIONS(libevp_mt PUBLIC -DLIBEVP_DLL)
	TARGET_COMPILE_DEFINITIONS(libevp_md PUBLIC -DLIBEVP_DLL)
	
	IF		(CMAKE_BUILD_TYPE STREQUAL "Debug")
		ADD_LINK_OPTIONS("/LTCG- /DEBUG")

		TARGET_COMPILE_OPTIONS(libevp_mt		PUBLIC "/MTd")
		TARGET_COMPILE_OPTIONS(libevp_md		PUBLIC "/MDd")
		TARGET_COMPILE_OPTIONS(libevp_static_mt PUBLIC "/MTd")
		TARGET_COMPILE_OPTIONS(libevp_static_md PUBLIC "/MDd")

		SET_TARGET_PROPERTIES(libevp_mt			PROPERTIES OUTPUT_NAME "libevp_mtd")
		SET_TARGET_PROPERTIES(libevp_md			PROPERTIES OUTPUT_NAME "libevp_mdd")
		SET_TARGET_PROPERTIES(libevp_static_mt	PROPERTIES OUTPUT_NAME "libevp_smtd")
		SET_TARGET_PROPERTIES(libevp_static_md	PROPERTIES OUTPUT_NAME "libevp_smdd")
	
		TARGET_LINK_LIBRARIES(libevp_mt "${CMAKE_SOURCE_DIR}/src/lib/libdvsku_crypt/libdvsku_crypt_mtd.lib")
		TARGET_LINK_LIBRARIES(libevp_md "${CMAKE_SOURCE_DIR}/src/lib/libdvsku_crypt/libdvsku_crypt_mdd.lib")
	ELSEIF	(CMAKE_BUILD_TYPE STREQUAL "Release")
		ADD_LINK_OPTIONS("/LTCG-")

		TARGET_COMPILE_OPTIONS(libevp_mt		PUBLIC "/MT")
		TARGET_COMPILE_OPTIONS(libevp_md		PUBLIC "/MD")
		TARGET_COMPILE_OPTIONS(libevp_static_mt PUBLIC "/MT")
		TARGET_COMPILE_OPTIONS(libevp_static_md PUBLIC "/MD")

		SET_TARGET_PROPERTIES(libevp_mt			PROPERTIES OUTPUT_NAME "libevp_mt")
		SET_TARGET_PROPERTIES(libevp_md			PROPERTIES OUTPUT_NAME "libevp_md")
		SET_TARGET_PROPERTIES(libevp_static_mt	PROPERTIES OUTPUT_NAME "libevp_smt")
		SET_TARGET_PROPERTIES(libevp_static_md	PROPERTIES OUTPUT_NAME "libevp_smd")
	
		TARGET_LINK_LIBRARIES(libevp_mt "${CMAKE_SOURCE_DIR}/src/lib/libdvsku_crypt/libdvsku_crypt_mt.lib")
		TARGET_LINK_LIBRARIES(libevp_md "${CMAKE_SOURCE_DIR}/src/lib/libdvsku_crypt/libdvsku_crypt_md.lib")
	ENDIF()
	
	SET_TARGET_PROPERTIES(libevp_mt			PROPERTIES LINKER_LANGUAGE CXX)
	SET_TARGET_PROPERTIES(libevp_md			PROPERTIES LINKER_LANGUAGE CXX)
	SET_TARGET_PROPERTIES(libevp_static_mt	PROPERTIES LINKER_LANGUAGE CXX)
	SET_TARGET_PROPERTIES(libevp_static_md	PROPERTIES LINKER_LANGUAGE CXX)
ENDIF()