CMAKE_MINIMUM_REQUIRED (VERSION 3.8)

INCLUDE_DIRECTORIES("${CMAKE_SOURCE_DIR}/libevp")

SET(BUILD_FILE_LIST "utilities/filtering.cpp" "libevp.cpp" "md5/md5.cpp")

IF(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
    SET(CMAKE_CXX_STANDARD 20)
    SET(CMAKE_CXX_FLAGS			"-m32 -ldl -pthread -Wall -fpic")
    SET(CMAKE_CXX_FLAGS_DEBUG	"-O0")
    SET(CMAKE_CXX_FLAGS_RELEASE "-O2")

    ADD_LIBRARY(libevp STATIC ${BUILD_FILE_LIST})

    IF(CMAKE_BUILD_TYPE STREQUAL "Debug")
        SET_TARGET_PROPERTIES(libevp PROPERTIES OUTPUT_NAME "libevp_d")
    ELSEIF(CMAKE_BUILD_TYPE STREQUAL "Release")
        SET_TARGET_PROPERTIES(libevp PROPERTIES OUTPUT_NAME "libevp")
    ENDIF()

    SET_TARGET_PROPERTIES(libevp PROPERTIES PREFIX "")
    SET_TARGET_PROPERTIES(libevp PROPERTIES LINKER_LANGUAGE CXX)
ELSEIF(CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
    SET(CMAKE_CXX_FLAGS			"/std:c++20 /DWIN32 /D_WINDOWS /W3 /EHsc /GR /GL-")
    SET(CMAKE_CXX_FLAGS_DEBUG	"/Od /Ob0 /RTC1 /Zi")
    SET(CMAKE_CXX_FLAGS_RELEASE "/O2 /Ob2 /DNDEBUG")

    ADD_LIBRARY(libevp_mt STATIC ${BUILD_FILE_LIST})

    TARGET_COMPILE_DEFINITIONS(libevp_mt PUBLIC -DLIBEVP_DLL)
    
    IF(CMAKE_BUILD_TYPE STREQUAL "Debug")
        ADD_LINK_OPTIONS("/LTCG- /DEBUG")

        TARGET_COMPILE_OPTIONS(libevp_mt PUBLIC "/MTd")
        SET_TARGET_PROPERTIES(libevp_mt PROPERTIES OUTPUT_NAME "libevp_smtd")
    ELSEIF(CMAKE_BUILD_TYPE STREQUAL "Release")
        ADD_LINK_OPTIONS("/LTCG-")

        TARGET_COMPILE_OPTIONS(libevp_mt PUBLIC "/MT")
        SET_TARGET_PROPERTIES(libevp_mt PROPERTIES OUTPUT_NAME "libevp_smt")
    ENDIF()
    
    SET_TARGET_PROPERTIES(libevp_mt PROPERTIES LINKER_LANGUAGE CXX)
ENDIF()